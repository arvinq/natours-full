//- extends the layout of base
extends base

//- we can choose to overwrite what's inside the block, or add something in the block like what we have here where we overwrite/append something in block head from base. 
//- this is from mapbox installation CDN. This exposes the mapbox GL object that we can use in the frontend of our application.
//- As a note, there's an issue when using mapbox npm library with parcel so instead of removing this script import in here, we will retain it.
//- eventhough we installed stripe in node already, it only works on the backend. we still need to import the script into our html template to be able to use stripe. see documentation stripe documentation here: stripe.com/docs/checkout/integration-builder to know what script to include. The stripe line will expose the stripe object to the global scope.
block append head
    script(src='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js')
    link(href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet')

include _reviewCard

//- mixins are reusable code that we can pass arguments into
mixin overviewBox(label, text, icon)
    .overview-box__detail
        svg.overview-box__icon
            use(xlink:href=`/img/icons.svg#icon-${icon}`)
        span.overview-box__label= label
        span.overview-box__text= text

//- but replace the block in base to this block redefined here
block content
    main.main
        section.section-header
            .header__hero
                .header__hero-overlay &nbsp;
                img.header__hero-img(src=`/img/tours/${tour.imageCover}`, alt=`${tour.name}`)

            .heading-box
                h1.heading-primary
                    span= `${tour.name} tour`
                .heading-box__group
                    .heading-box__detail
                        svg.heading-box__icon
                            use(xlink:href='/img/icons.svg#icon-clock')
                        span.heading-box__text= `${tour.duration} days`
                    .heading-box__detail
                        svg.heading-box__icon
                            use(xlink:href='/img/icons.svg#icon-map-pin')
                        span.heading-box__text= tour.startLocation.description

        section.section-description
            .overview-box
                div
                    .overview-box__group
                        h2.heading-secondary.ma-bt-lg Quick facts

                        //- for js code, put - before the line to not produce any output in browser
                        - const date = tour.startDates[0].toLocaleString('en-US', { month: 'long', year: 'numeric' })
                        +overviewBox('Next date', date, 'calendar')
                        +overviewBox('Difficulty', tour.difficulty, 'trending-up')
                        +overviewBox('Participants', `${tour.maxGroupSize} people`, 'user')
                        +overviewBox('Rating', `${tour.ratingsAverage} / 5`, 'star')

                    .overview-box__group
                        h2.heading-secondary.ma-bt-lg Your tour guides

                        each guide in tour.guides
                            .overview-box__detail
                                img.overview-box__img(src=`/img/users/${guide.photo}`, alt=`${guide.name}`)

                                - if (guide.role === 'lead-guide')
                                    span.overview-box__label Lead guide
                                - if (guide.role === 'guide')
                                    span.overview-box__label Tour guide
                                span.overview-box__text= guide.name

            .description-box
                h2.heading-secondary.ma-bt-lg= `About ${tour.name} tour`
                - const arrParagraph = tour.description.split('\n')
                each paragraph in arrParagraph
                    p.description__text= paragraph

        section.section-pictures
            //- in pug loop, we can define a second var that will automatically be the index.
            each img, i in tour.images
                .picture-box
                    img.picture-box__img(class=`picture-box__img--${i+1}`, src=`/img/tours/${img}`, alt= `${tour.name} Tour ${i + 1}`)
                    //- original line below. we can convert the class into a class attribute
                    //- img.picture-box__img.picture-box__img--2(src='/img/tour-5-2.jpg', alt='The Park Camper Tour 1')

        //- We need tour.locations in our mapbox.js. We already have data about the tour here in our template html. We can put expose the location data as a string into our HTML so that JS can read it without having to call any API inside our JS.
        //- We can specify a data attribute here in html and read the attribute in JS. But we need to convert our arrays/objects into a string in html since html cannot recognize objects.
        //- whatever we put in data attribute like data-<name> will be accessible in dataset property in JS. (see mapbox.js)
        section.section-map
            #map(data-locations=`${JSON.stringify(tour.locations)}`)

        section.section-reviews
            .reviews
                each review in tour.reviews
                    +reviewCard(review)

        section.section-cta
            .cta
                .cta__img.cta__img--logo
                    img(src='/img/logo-white.png', alt='Natours logo')
                img.cta__img.cta__img--1(src=`/img/tours/${tour.images[1]}`, alt='Tour Picture')
                img.cta__img.cta__img--2(src=`/img/tours/${tour.images[2]}`, alt='Tour Picture')
                .cta__content
                    h2.heading-secondary What are you waiting for?
                    p.cta__text= `${tour.duration} days. 1 adventure. Infinite memories. Make it yours today!`

                    //- if there's currently a logged in user, then user is available. And so we can use this: 
                    if user
                        //- adding an id (book-tour) and putting in the tour id in this element as a data attribute to be able to read this attribute in our JS, see data-locations above.
                        button.btn.btn--green.span-all-rows#book-tour(data-tour-id=`${tour.id}`) Book tour now!
                    else
                        //- converting this to link and adding the href property.
                        a.button.btn.btn--green.span-all-rows(href='/login') Log in to book tour!